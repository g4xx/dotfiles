#!/bin/bash

# === CONFIGURATION ===
SLEEP=60

# === SOURCE CREDENTIALS ===
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CREDS_FILE="$SCRIPT_DIR/.creds"

if [[ ! -f "$CREDS_FILE" ]]; then
  echo "‚ùå Credentials file not found: $CREDS_FILE"
  exit 1
fi

source "$CREDS_FILE" || {
  echo "‚ùå Failed to source credentials file."
  exit 1
}

# === SOURCE FUNCTIONS ===
LIB_DIR="$HOME/.local/lib"
FUNCS="$LIB_DIR/sunshine_functions.sh"

if [[ ! -f "$FUNCS" ]]; then
  echo "‚ùå Missing function file: $FUNCS"
  exit 1
fi

source "$FUNCS"

# === HANDLE EMPTY ARGUMENT ===
ACTION="$1"

if [[ -z "$ACTION" ]]; then
ACTION="status"
fi

# === VALIDATE ARGUMENT ===
if [[ "$ACTION" != "on" && "$ACTION" != "off" && "$ACTION" != "status" && "$ACTION" != "forceoff" ]]; then
  echo "Usage: $0 [on|off|status|forceoff]"
  exit 1
fi

# === SAFE JSON PAYLOAD ===
AUTH_PAYLOAD=$(cat <<EOF
{
  "identity": "$USER",
  "password": "$PASSWORD"
}
EOF
)

# === AUTHENTICATE ===
AUTH_RESPONSE=$(curl -s -X POST "$URL/api/collections/_superusers/auth-with-password" \
  -H "Content-Type: application/json" \
  -d "$AUTH_PAYLOAD")

AUTH_TOKEN=$(echo "$AUTH_RESPONSE" | jq -r '.token')

if [[ -z "$AUTH_TOKEN" || "$AUTH_TOKEN" == "null" ]]; then
  echo "‚ùå Failed to authenticate. Response:"
  echo "$AUTH_RESPONSE"
  exit 1
fi

echo "üîê Authenticated successfully."

# === SEND ACTION ===
if [[ "$ACTION" == "on" ]]; then
  SHELLY_RESPONSE=$(curl -s -u "$SHELLY_USER:$SHELLY_PASS" "http://$SHELLY_IP/relay/0?turn=on")
  (
	sleep 5
  	RESPONSE=$(curl -s -w "\nHTTP_STATUS:%{http_code}" \
  	-H "Authorization: Bearer $AUTH_TOKEN" \
  	"$URL/api/upsnap/wake/$SUNSHINE_ID")
  )&

elif [[ "$ACTION" == "off" ]]; then
  RESPONSE=$(curl -s -w "\nHTTP_STATUS:%{http_code}" \
  -H "Authorization: Bearer $AUTH_TOKEN" \
  "$URL/api/upsnap/shutdown/$SUNSHINE_ID")
  watch_device_and_shutdown &

elif [[ "$ACTION" == "status" ]]; then
  RESPONSE=$(curl -s -w "\nHTTP_STATUS:%{http_code}" \
  -H "Authorization: Bearer $AUTH_TOKEN" \
  "$URL/api/collections/devices/records/$SUNSHINE_ID")
  SHELLY_RESPONSE=$(curl -s -u "$SHELLY_USER:$SHELLY_PASS" "http://$SHELLY_IP/relay/0")
fi

echo "üöÄ Sending '$ACTION' request to Sunshine..."


BODY=$(echo "$RESPONSE" | sed -n '1,/HTTP_STATUS:/p' | sed '$d')
STATUS=$(echo "$RESPONSE" | sed -n 's/HTTP_STATUS://p')

#echo "üì° Response (HTTP $STATUS):"
#echo "$BODY"

if [[ "$STATUS" != "200" ]]; then
  echo "‚ùå '$ACTION' request failed."
  exit 1
fi

if [[ "$ACTION" == "status" ]]; then
  SHELLY_STATUS=$(echo "$SHELLY_RESPONSE" | jq -r '.ison')
  SUNSHINE_STATUS=$(echo "$BODY" | jq -r '.status')
  echo "Sunshine is $SUNSHINE_STATUS"
  if [[ $SHELLY_STATUS == "true" ]]; then
  	echo "Shelly is online"
  else
	echo "Shelly is offline"
  fi
fi

# Force shutdown sunshine by disabling power
if [[ "$ACTION" == "forceoff" ]]; then
	  #echo "‚è≥ Waiting $SLEEP seconds before turning off Shelly plug..."
	  #sleep $SLEEP

	  echo "üîå Turning off Shelly plug at $SHELLY_IP..."
	  SHELLY_RESPONSE=$(curl -s -u "$SHELLY_USER:$SHELLY_PASS" "http://$SHELLY_IP/relay/0?turn=off")

  echo "Shelly response:"
  echo "$SHELLY_RESPONSE"
fi

# echo "Done sucessfully ‚úÖ"
